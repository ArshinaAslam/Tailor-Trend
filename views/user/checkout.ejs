<%- include("../../views/partials/user/header") %>

<style>
    
    :root {
        --primary-color: #FF3F6c;
        --secondary-color: #ff006e;
        --background-color: #f8f9fa;
        --card-background: #ffffff;
        --text-color: #343a40;
        --border-color: #e9ecef;
        --success-color: #38b000;
        --shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        --border-radius: 12px;
        --transition: all 0.3s ease;
    }

    
    body {
        font-family: 'Inter', sans-serif;
        background-color: var(--background-color);
        color: var(--text-color);
        margin: 0;
        padding: 0;
        line-height: 1.6;
    }

    .checkout-container {
        max-width: 1200px;
        margin: 40px auto;
        padding: 0 20px;
    }

    .section-title {
        font-size: 1.5rem;
        font-weight: 700;
        margin-bottom: 1.5rem;
        position: relative;
        padding-bottom: 0.5rem;
    }

    .section-title::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 50px;
        height: 3px;
        background-color: var(--primary-color);
        border-radius: 10px;
    }
    
    .checkout-card {
        background: var(--card-background);
        border-radius: var(--border-radius);
        padding: 24px;
        box-shadow: var(--shadow);
        margin-bottom: 24px;
        transition: var(--transition);
    }

    .checkout-card:hover {
        transform: translateY(-3px);
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
    }

    /* Buttons */
    .btn-primary {
        background: var(--primary-color);
        color: white;
        border: none;
        padding: 12px 24px;
        border-radius: 8px;
        font-weight: 600;
        cursor: pointer;
        transition: var(--transition);
        text-transform: uppercase;
        letter-spacing: 0.5px;
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }

    .btn-primary:hover {
        background: #b03168;
        transform: translateY(-2px);
    }

    .btn-secondary {
        background: transparent;
        color: var(--primary-color);
        border: 1px solid var(--primary-color);
        padding: 8px 16px;
        border-radius: 8px;
        font-weight: 500;
        cursor: pointer;
        transition: var(--transition);
    }

    .btn-secondary:hover {
        background: rgba(58, 134, 255, 0.1);
    }

    .btn-danger {
        background: var(--secondary-color);
        color: white;
        border: none;
        padding: 8px 16px;
        border-radius: 8px;
        font-weight: 500;
        cursor: pointer;
        transition: var(--transition);
    }

    .btn-danger:hover {
        background: #e50064;
    }

    .btn-full {
        width: 100%;
    }

    
    .products-table {
        width: 100%;
        border-collapse: separate;
        border-spacing: 0;
    }

    .products-table th {
        background: rgba(58, 134, 255, 0.1);
        font-weight: 600;
        padding: 16px;
        text-align: left;
        border-top: 1px solid var(--border-color);
        border-bottom: 1px solid var(--border-color);
    }

    .products-table th:first-child {
        border-top-left-radius: 8px;
        border-left: 1px solid var(--border-color);
    }

    .products-table th:last-child {
        border-top-right-radius: 8px;
        border-right: 1px solid var(--border-color);
    }

    .products-table td {
        padding: 16px;
        border-bottom: 1px solid var(--border-color);
    }

    .products-table tr:last-child td:first-child {
        border-bottom-left-radius: 8px;
        border-left: 1px solid var(--border-color);
    }

    .products-table tr:last-child td:last-child {
        border-bottom-right-radius: 8px;
        border-right: 1px solid var(--border-color);
    }

    .products-table tr td:first-child {
        border-left: 1px solid var(--border-color);
    }

    .products-table tr td:last-child {
        border-right: 1px solid var(--border-color);
    }

    .product-image {
        width: 80px;
        height: 80px;
        border-radius: 10px;
        object-fit: cover;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        transition: var(--transition);
    }

    .product-image:hover {
        transform: scale(1.05);
    }

    .product-name {
        font-weight: 600;
        color: var(--text-color);
    }

    .product-price {
        font-weight: 700;
        color: var(--primary-color);
    }

    .delete-button {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        width: 36px;
        height: 36px;
        border-radius: 50%;
        background: rgba(255, 0, 110, 0.1);
        color: var(--secondary-color);
        border: none;
        cursor: pointer;
        transition: var(--transition);
    }

    .delete-button:hover {
        background: var(--secondary-color);
        color: white;
    }

    
    .address-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 20px;
        margin-top: 20px;
    }

    .address-card {
        background: var(--card-background);
        border: 1px solid var(--border-color);
        border-radius: var(--border-radius);
        padding: 20px;
        position: relative;
        transition: var(--transition);
    }

    .address-card:hover {
        border-color: var(--primary-color);
        transform: translateY(-3px);
        box-shadow: var(--shadow);
    }

    .address-card.selected {
        border: 2px solid var(--primary-color);
        background-color: rgba(58, 134, 255, 0.05);
    }

    .address-radio {
        position: absolute;
        top: 15px;
        right: 15px;
        accent-color: var(--primary-color);
        width: 18px;
        height: 18px;
    }

    .address-type {
        display: inline-block;
        background: rgba(58, 134, 255, 0.1);
        color: var(--primary-color);
        padding: 4px 12px;
        border-radius: 20px;
        font-size: 0.8rem;
        font-weight: 600;
        margin-bottom: 10px;
    }

    .address-details {
        font-size: 0.9rem;
        color: #555;
        margin-bottom: 15px;
        line-height: 1.6;
    }

    .address-actions {
        display: flex;
        gap: 10px;
        margin-top: 15px;
    }

    .add-address-card {
        display: flex;
        align-items: center;
        justify-content: center;
        border: 2px dashed var(--border-color);
        border-radius: var(--border-radius);
        padding: 20px;
        background: transparent;
        min-height: 200px;
        transition: var(--transition);
    }

    .add-address-card:hover {
        border-color: var(--primary-color);
        background: rgba(58, 134, 255, 0.05);
    }

    
    .coupon-input {
        display: flex;
        gap: 10px;
        margin-bottom: 20px;
    }

    .coupon-input input {
        flex: 1;
        padding: 12px 15px;
        border: 1px solid var(--border-color);
        border-radius: 8px;
        font-size: 1rem;
        transition: var(--transition);
    }

    .coupon-input input:focus {
        outline: none;
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px rgba(58, 134, 255, 0.2);
    }

    .coupon-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .coupon-item {
        background: var(--card-background);
        border: 1px solid var(--border-color);
        border-radius: 8px;
        padding: 15px;
        margin-bottom: 10px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        transition: var(--transition);
    }

    .coupon-item:hover {
        border-color: var(--primary-color);
        transform: translateX(5px);
    }

    .coupon-info {
        display: flex;
        flex-direction: column;
    }

    .coupon-name {
        font-weight: 600;
        color: var(--text-color);
    }

    .coupon-description {
        font-size: 0.8rem;
        color: #666;
    }

    .coupon-actions {
        display: flex;
        gap: 10px;
    }

    
    .payment-methods {
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .payment-option {
        display: flex;
        align-items: center;
        padding: 15px;
        border: 1px solid var(--border-color);
        border-radius: 10px;
        transition: var(--transition);
        cursor: pointer;
    }

    .payment-option:hover {
        border-color: var(--primary-color);
        background: rgba(58, 134, 255, 0.05);
    }

    .payment-option.selected {
        border-color: var(--primary-color);
        background: rgba(58, 134, 255, 0.05);
    }

    .payment-radio {
        margin-right: 15px;
        accent-color: var(--primary-color);
        width: 18px;
        height: 18px;
    }

    .payment-label {
        font-weight: 600;
    }

    
    .summary-table {
        width: 100%;
        margin-bottom: 20px;
    }

    .summary-table tr {
        border-bottom: 1px solid var(--border-color);
    }

    .summary-table tr:last-child {
        border-bottom: none;
    }

    .summary-table th {
        text-align: left;
        padding: 12px 0;
        font-weight: 600;
    }

    .summary-table td {
        text-align: right;
        padding: 12px 0;
    }

    .summary-total {
        font-size: 1.5rem;
        font-weight: 700;
        color: var(--primary-color);
    }

    .checkout-button {
        background: var(--primary-color);
        color: white;
        border: none;
        padding: 16px 24px;
        border-radius: 8px;
        font-weight: 600;
        font-size: 1.1rem;
        cursor: pointer;
        transition: var(--transition);
        display: block;
        width: 100%;
        text-align: center;
        text-transform: uppercase;
        letter-spacing: 1px;
    }

    .checkout-button:hover {
        background:#e50064;
        transform: translateY(-2px);
        box-shadow: 0 6px 15px rgba(58, 134, 255, 0.3);
    }

   
    @media (max-width: 768px) {
        .address-grid {
            grid-template-columns: 1fr;
        }

        .coupon-item {
            flex-direction: column;
            align-items: flex-start;
            gap: 15px;
        }

        .coupon-actions {
            width: 100%;
        }

        .coupon-actions button {
            flex: 1;
        }

        .products-table {
            display: block;
            overflow-x: auto;
        }
    }
</style>

<div class="checkout-container">
    <!-- Products Section -->
    <div class="checkout-card">
        <h3 class="section-title">Your Products</h3>
        <div class="table-responsive">
            <table class="products-table">
                <thead>
                    <tr>
                        <th>Image</th>
                        <th>Product</th>
                        <th>Quantity</th>
                        <th>Total</th>
                    </tr>
                </thead>
                <tbody>
                    <% if (product && Array.isArray(product) && product.length > 0) { %>
                        <% for (let i = 0; i < product.length; i++) { %>
                            <tr>
                                <td>
                                    <img src="/uploads/product-images/<%= product[i].productId.productImage[0] %>" alt="#" class="product-image">
                                </td>
                                <td>
                                    <span class="product-name"><%= product[i].productId.productName %></span>
                                </td>
                                <td><%= product[i].quantity %></td>
                                <td>
                                    <span class="product-price">₹<%= product[i].productId.salePrice * product[i].quantity %></span>
                                </td>
                                
                            </tr>
                        <% } %>
                    <% } else { %>
                        <tr>
                            <td colspan="5" style="text-align: center; padding: 30px;">
                                <div style="font-size: 1.1rem; color: #666;">
                                    Your cart is empty
                                </div>
                                <a href="/" class="btn-primary" style="margin-top: 15px;">Shop Now</a>
                            </td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Address Section -->
    <div class="checkout-card">
        <h3 class="section-title">Delivery Address</h3>
        
        <div class="address-grid">
            <% if (locals.userAddress && userAddress.address.length > 0) { %>
                <% userAddress.address.forEach((address) => { %>
                    <div class="address-card" id="address-<%= address._id %>">
                        <input 
                            class="address-radio" 
                            type="radio" 
                            id="addressRadio<%= address._id %>" 
                            name="selectedAddress" 
                            value="<%= address._id %>"
                           
                            onchange="selectAddress('<%= address._id %>')"
                        >
                        <span class="address-type"><%= address.addressType %></span>
                        <div class="address-details">
                            <strong><%= address.name %></strong><br />
                            <%= address.city %>, <%= address.landMark %><br />
                            <%= address.state %> - <%= address.pincode %><br />
                            <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" viewBox="0 0 16 16" style="margin-right: 5px;">
                                <path d="M11 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h6zM5 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H5z"/>
                                <path d="M8 14a1 1 0 1 0 0-2 1 1 0 0 0 0 2z"/>
                            </svg>
                            <%= address.phone %><br />
                            <% if (address.altPhone) { %>
                                <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" fill="currentColor" viewBox="0 0 16 16" style="margin-right: 5px;">
                                    <path d="M11 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1h6zM5 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H5z"/>
                                    <path d="M8 14a1 1 0 1 0 0-2 1 1 0 0 0 0 2z"/>
                                </svg>
                                Alt: <%= address.altPhone %>
                            <% } %>
                        </div>
                        <div class="address-actions">
                            <a href="/editAddress?id=<%= address._id %>" class="btn-secondary">Edit</a>
                            <!-- <a href="/deleteAddress?id=<%= address._id %>" class="btn-danger">Delete</a> -->
                        </div>
                    </div>
                <% }) %>
            <% } %>
            
            <div class="add-address-card">
                <a href="/addAddress" class="btn-primary">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16" style="margin-right: 8px;">
                        <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
                    </svg>
                    Add New Address
                </a>
            </div>
        </div>
    </div>

    <!-- Coupon Section -->
    <div class="checkout-card">
        <h3 class="section-title">Discount Coupons</h3>
        
        <div class="coupon-input">
            <input type="text" id="inputCoupon" placeholder="Enter coupon code" class="form-control">
            <button class="btn-primary" id="applyButton" type="button" onclick="applyCoupon('<%= grandTotal %>')">
                Apply
            </button>
        </div>
        
        <ul class="coupon-list">
            <% if (locals.Coupon && Coupon.length > 0) { %>
                <% for (let i = 0; i < Coupon.length; i++) { %>
                    <li class="coupon-item">
                        <div class="coupon-info">
                            <span class="coupon-name"><%= Coupon[i].name %></span>
                            <span class="coupon-description">Get discount on your order</span>
                        </div>
                        <div class="coupon-actions">
                            <button onclick="useCoupon('<%= Coupon[i].name %>')" id="useButton_<%= Coupon[i].name %>" class="btn-primary">
                                Use
                            </button>
                            <button onclick="cancelCoupon('<%= Coupon[i].name %>')" id="cancelButton_<%= Coupon[i].name %>" class="btn-danger" style="display: none;">
                                Cancel
                            </button>
                        </div>
                    </li>
                <% } %>
            <% } else { %>
                <li style="text-align: center; padding: 20px; color: #666;">
                    No coupons available at this time
                </li>
            <% } %>
        </ul>
    </div>

    <!-- Payment Section -->
    <div class="checkout-card">
        <h3 class="section-title">Payment Method</h3>
        
        <div class="payment-methods">
            <div class="payment-option" onclick="selectPaymentMethod('cod')">
                <input class="payment-radio" type="radio" value="cod" name="payment_option" id="CashOnDelivey" checked="">
                <label class="payment-label" for="CashOnDelivey">Cash on Delivery</label>
            </div>
            
            <div class="payment-option" onclick="selectPaymentMethod('razorpay')">
                <input class="payment-radio" required="" value="razorpay" type="radio" name="payment_option" id="Razorpay">
                <label class="payment-label" for="Razorpay">Razorpay</label>
            </div>
            
            <div class="payment-option" onclick="selectPaymentMethod('wallet')">
                <input class="payment-radio" required="" value="wallet" type="radio" name="payment_option" id="wallet">
                <label class="payment-label" for="wallet">Wallet</label>
            </div>
        </div>
    </div>

    <!-- Order Summary -->
    <div class="checkout-card">
        <h3 class="section-title">Order Summary</h3>
        
        <table class="summary-table">
            <tr>
                <th>Shipping</th>
                <td><em>Free Shipping</em></td>
            </tr>
            <tr>
                <th>Discount</th>
                <td id="discount">
                    <% if (locals.offerPrice) { %>
                        ₹<%= locals.offerPrice %>
                    <% } else { %>
                        ₹0
                    <% } %>
                </td>
            </tr>
            <tr>
                <th>Total</th>
                <td class="summary-total" id="totalValue">₹<%= grandTotal %></td>
            </tr>
        </table>
        
        <button type="button" class="checkout-button" onclick="placeOrder()">
            Complete Order
        </button>
        
    </div>
</div>

<script src="https://checkout.razorpay.com/v1/checkout.js"></script>


 <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
   
// async function placeOrder() {
//     const selectedPayment = document.querySelector('input[name="payment_option"]:checked');
//     const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');

   
//     const paymentMethod = selectedPayment.value.trim()

//     if (paymentMethod != 'cod') {
//         Swal.fire({
//             title: 'Payment Method',
//             text: 'COD available only!',
//             icon: 'warning',
//             confirmButtonColor: '#FF3F6c'
//         });
//         return;
//     }

//     if (!selectedAddress) {
//         Swal.fire({
//             title: 'Address Required',
//             text: 'Please select a delivery address.',
//             icon: 'warning',
//             confirmButtonColor: '#FF3F6c'
//         });
//         return;
//     }
    
//     const addressId = selectedAddress.value;
    
    
    
//     Swal.fire({
//         title: 'Processing Order',
//         text: 'Please wait while we process your order...',
//         allowOutsideClick: false,
//         showConfirmButton: false,
//         willOpen: () => {
//             Swal.showLoading();
//         }
//     });
    
//     try {
//         const response = await fetch('/place-order', {
//             method: 'PUT',
//             headers: {
//                 'Content-type': 'application/json'
//             },
//             body: JSON.stringify({ addressId, paymentMethod })
//         });

//         const result = await response.json();

//         if (result.success) {
//             Swal.fire({
//                 title: 'Success!',
//                 text: 'Order completed successfully!',
//                 icon: 'success',
//                 confirmButtonColor: '#FF3F6c'
//             }).then(() => {
//                 window.location.href = '/orderConfirm';
//             });
//             return;
//         }

//         Swal.fire({
//             title: 'Error',
//             text: result.message ||'Cannot be able to complete place the order!',
//             icon: 'error',
//             confirmButtonColor: '#FF3F6c'
//         });
//     } catch (error) {
//         Swal.fire({
//             title: 'Error',
//             text: 'An error occurred while processing your order.',
//             icon: 'error',
//             confirmButtonColor: '#FF3F6c'
//         });
//     }
// }


async function placeOrder() {
    const selectedPayment = document.querySelector('input[name="payment_option"]:checked');
    const selectedAddress = document.querySelector('input[name="selectedAddress"]:checked');

    if (!selectedPayment || !selectedAddress) {
        Swal.fire({
            title: 'Missing Information',
            text: 'Please select a payment method and a delivery address.',
            icon: 'warning',
            confirmButtonColor: '#FF3F6c'
        });
        return;
    }

    const paymentMethod = selectedPayment.value.trim();
    const addressId = selectedAddress.value;

    Swal.fire({
        title: 'Processing Order',
        text: 'Please wait while we process your order...',
        allowOutsideClick: false,
        showConfirmButton: false,
        willOpen: () => {
            Swal.showLoading();
        }
    });

    try {
        const response = await fetch('/place-order', {
            method: 'PUT',
            headers: {
                'Content-type': 'application/json'
            },
            body: JSON.stringify({ addressId, paymentMethod })
        });

        const result = await response.json();

        if (!result.success) {
            Swal.fire({
                title: 'Error',
                text: result.message || 'Cannot complete the order!',
                icon: 'error',
                confirmButtonColor: '#FF3F6c'
            });
            return;
        }

        Swal.fire({
            title: 'Success!',
            text: 'Order completed successfully!',
            icon: 'success',
            confirmButtonColor: '#FF3F6c'
        }).then(() => {
            window.location.href = '/orderConfirm';
        });

    } catch (error) {
        Swal.fire({
            title: 'Error',
            text: 'An error occurred while processing your order.',
            icon: 'error',
            confirmButtonColor: '#FF3F6c'
        });
    }
}

function selectAddress(addressId) {
    document.querySelectorAll('.address-card').forEach(card => {
        card.classList.remove('selected');
    });
    
   
    document.getElementById('address-' + addressId).classList.add('selected');
}


function selectPaymentMethod(method) {
   
    document.querySelectorAll('.payment-option').forEach(option => {
        option.classList.remove('selected');
    });
    
   
    document.querySelector(`input[value="${method}"]`).checked = true;
    
   
    document.querySelector(`input[value="${method}"]`).closest('.payment-option').classList.add('selected');
}


</script>
<%- include("../../views/partials/user/footer") %>