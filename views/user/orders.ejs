<%- include("../../views/partials/user/header") %>
<style>
    :root {
      --primary: #6366f1;
      --primary-dark: #4f46e5;
      --secondary: #ec4899;
      --dark: #1e293b;
      --light: #f1f5f9;
      --success: #10b981;
      --danger: #ef4444;
      --warning: #f59e0b;
      --gray-100: #f3f4f6;
      --gray-200: #e5e7eb;
      --gray-300: #d1d5db;
      --gray-400: #9ca3af;
      --gray-500: #6b7280;
      --border-radius: 12px;
      --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
      --shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
      --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
    }
  
    body {
      font-family: 'Inter', sans-serif;
      background-color: var(--light);
      color: var(--dark);
      margin: 0;
      padding: 0;
      line-height: 1.6;
    }
  
    .main {
      min-height: calc(100vh - 100px);
    }
  
    .breadcrumb-wrap {
      background-color: transparent;
      padding: 20px 0 0;
      margin-bottom: 20px;
    }
  
    .breadcrumb {
      font-size: 14px;
      display: flex;
      align-items: center;
    }
  
    .breadcrumb a {
      color: var(--gray-500);
      text-decoration: none;
      transition: color 0.2s;
    }
  
    .breadcrumb a:hover {
      color: var(--primary);
    }
  
    .breadcrumb span {
      margin: 0 8px;
      color: var(--gray-400);
    }
  
  
    .dashboard-container {
      display: grid;
      grid-template-columns: 280px 1fr;
      gap: 24px;
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 20px;
    }
  
    
    .dashboard-menu {
      background-color: white;
      border-radius: var(--border-radius);
      box-shadow: var(--shadow);
      position: sticky;
      top: 20px;
      height: fit-content;
      overflow: hidden;
    }
  
    .dashboard-menu ul {
      list-style: none;
      padding: 0;
      margin: 0;
    }
  
    .dashboard-menu .nav-link {
      display: flex;
      align-items: center;
      padding: 16px 20px;
      color: var(--gray-500);
      text-decoration: none;
      transition: all 0.2s;
      border-left: 3px solid transparent;
      font-weight: 500;
    }
  
    .dashboard-menu .nav-link i {
      margin-right: 12px;
      font-size: 18px;
      color: var(--gray-400);
      transition: color 0.2s;
    }
  
    .dashboard-menu .nav-link:hover {
      background-color: var(--gray-100);
      color: var(--primary);
    }
  
    .dashboard-menu .nav-link:hover i {
      color: var(--primary);
    }
  
    .dashboard-menu .nav-link.active {
      background-color: rgba(99, 102, 241, 0.1);
      color: var(--primary);
      border-left: 3px solid var(--primary);
    }
  
    .dashboard-menu .nav-link.active i {
      color: var(--primary);
    }
  

    .content-area {
      min-width: 0;
    }
  
  
    .card {
      background-color: white;
      border-radius: var(--border-radius);
      box-shadow: var(--shadow);
      overflow: hidden;
      margin-bottom: 24px;
      border: none;
      transition: transform 0.3s, box-shadow 0.3s;
    }
  
    .card:hover {
      transform: translateY(-4px);
      box-shadow: var(--shadow-lg);
    }
  
    .card-header {
      background: linear-gradient(135deg, var(--primary), var(--primary-dark));
      color: white;
      padding: 16px 20px;
      font-weight: 600;
      border-bottom: none;
    }
  
    .card-body {
      padding: 24px;
    }
  
  
    .form-control {
      width: 100%;
      padding: 12px 16px;
      border: 1px solid var(--gray-300);
      border-radius: var(--border-radius);
      font-size: 16px;
      transition: border-color 0.2s, box-shadow 0.2s;
      margin-bottom: 16px;
    }
  
    .form-control:focus {
      border-color: var(--primary);
      box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.2);
      outline: none;
    }
  
  
    .btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: 10px 20px;
      border-radius: var(--border-radius);
      font-weight: 500;
      cursor: pointer;
      transition: all 0.2s;
      border: none;
      text-decoration: none;
    }
  
    .btn-sm {
      padding: 8px 16px;
      font-size: 14px;
    }
  
    .btn-primary {
      background-color: var(--primary);
      color: white;
    }
  
    .btn-primary:hover {
      background-color: var(--primary-dark);
      transform: translateY(-2px);
    }
  
    .btn-secondary {
      background-color: var(--gray-400);
      color: white;
    }
  
    .btn-secondary:hover {
      background-color: var(--gray-500);
      transform: translateY(-2px);
    }
  
    .me-2 {
      margin-right: 8px;
    }
  
    
    .table {
      width: 100%;
      border-collapse: separate;
      border-spacing: 0;
    }
  
    .table th,
    .table td {
      padding: 16px;
      text-align: left;
    }
  
    .table th {
      background-color: var(--gray-100);
      font-weight: 600;
      color: var(--gray-500);
      border-bottom: 1px solid var(--gray-200);
    }
  
    .table td {
      border-bottom: 1px solid var(--gray-200);
    }
  
    .table tr:last-child td {
      border-bottom: none;
    }
  
    .table tbody tr {
      transition: background-color 0.2s;
    }
  
    .table tbody tr:hover {
      background-color: var(--gray-100);
    }
  
    
    .table th.order-id,
    .table td:nth-child(1) {
      width: 30%; 
    }
  
    .table th.order-date,
    .table td:nth-child(2) {
      width: 20%; 
    }
  
    .table th.order-total,
    .table td:nth-child(3) {
      width: 15%; 
    }
  
    .table th.order-status,
    .table td:nth-child(4) {
      width: 20%; 
    }
  
    .table th.order-actions,
    .table td:nth-child(5) {
      width: 15%; 
    }
  
    
    @media (max-width: 992px) {
      .dashboard-container {
        grid-template-columns: 1fr;
      }
  
      .dashboard-menu {
        position: static;
        margin-bottom: 24px;
      }
    }
  
    @media (max-width: 768px) {
      .breadcrumb-wrap {
        padding: 16px 0 0;
      }
  
      .card-header,
      .card-body {
        padding: 16px;
      }
  
     
      .table th,
      .table td {
        display: block;
        width: 100% !important;
        text-align: left;
      }
  
      .table thead {
        display: none;
      }
  
      .table tbody tr {
        margin-bottom: 16px;
        display: block;
        border-bottom: 2px solid var(--gray-200);
      }
  
      .table td {
        padding: 8px 16px;
        position: relative;
        border-bottom: none;
      }
  
      .table td:before {
        content: attr(data-label);
        font-weight: 600;
        color: var(--gray-500);
        display: inline-block;
        width: 40%;
        padding-right: 10px;
      }
    }

.pagination {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 12px;
  margin: 30px 0;
  font-size: 15px;
}

.pagination a {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 40px;
  min-width: 40px;
  text-decoration: none;
  color: var(--dark);
  background-color: white;
  padding: 0 15px;
  border-radius: var(--border-radius);
  transition: all 0.2s ease;
  box-shadow: var(--shadow);
  font-weight: 500;
}

.pagination a:hover {
  background-color: var(--primary);
  color: white;
  transform: translateY(-2px);
  box-shadow: var(--shadow-lg);
}

.pagination .current-page {
  font-weight: 600;
  color: var(--dark);
  background-color: white;
  height: 40px;
  min-width: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--border-radius);
  box-shadow: var(--shadow);
}

.pagination .disabled {
  color: var(--gray-400);
  background-color: var(--gray-100);
  cursor: not-allowed;
  box-shadow: none;
}


@media (max-width: 576px) {
  .pagination {
    gap: 8px;
  }
  
  .pagination a, .pagination .current-page {
    height: 36px;
    min-width: 36px;
    font-size: 14px;
  }
}
    
    .search-container {
      margin: 0 24px;
      padding-top: 16px;
    }

    .search-input {
      width: 100%;
      padding: 12px 16px;
      border: 1px solid var(--gray-300);
      border-radius: var(--border-radius);
      font-size: 16px;
      transition: border-color 0.2s, box-shadow 0.2s;
    }

    .search-input:focus {
      border-color: var(--primary);
      box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.2);
      outline: none;
    }
  
    @media (max-width: 576px) {
      .dashboard-container {
        padding: 0 12px;
      }
    }
  </style>

<main class="main">
  <div class="breadcrumb-wrap">
    <div class="container">
      <div class="breadcrumb">
        <a href="/" rel="nofollow">Home</a>
        <span></span> Profile <span></span> Orders
      </div>
    </div>
  </div>

  <section class="py-4">
    <div class="dashboard-container">
     
      <%- include("../../views/partials/user/profile-sidebar") %>

     
      <div class="content-area">
        <!-- Orders Section -->
        <div id="orders">
          <div class="card">
            <div class="card-header">
              <h5 class="mb-0">Your Orders</h5>
            </div>
            
            <!-- Search  -->
            <div class="search-container">
                <input 
                  type="text" 
                  class="search-input" 
                  id="orderSearch" 
                  name="search" 
                  placeholder="Search by order ID or status..." 
                  value="<%= searchQuery %>"
                  autocomplete="off"
                >
              </div>

            <div class="card-body">
              <div class="table-responsive">
                <table class="table" id="orderTable">
                  <thead>
                    <tr>
                      <th class="order-id">Order ID</th>
                      <th class="order-date">Date</th>
                      <th class="order-total">Total</th>
                      <th class="order-status">Status</th>
                      <th class="order-actions">Actions</th>
                    </tr>
                  </thead>
                  <tbody id="orderTableBody">
                    <% if (orders && Array.isArray(orders) && orders.length > 0) { %>
                      <% orders.forEach((order) => { %>
                        <tr class="order-item">
                          <td data-label="Order ID"><%= order.orderid %></td>
                          <td data-label="Date"><%= order.createdOn ? order.createdOn.toLocaleDateString() : 'N/A' %></td>
                          <td data-label="Total">₹<%= order.finalAmount.toFixed(2) %></td>
                          <td data-label="Status"><%= order.status %></td>
                          <td data-label="Actions">
                            <a href="/orderDetails?id=<%= order._id %>" class="btn btn-sm btn-primary">View</a>
                          </td>
                        </tr>
                      <% }) %>
                    <% } else { %>
                      <tr>
                        <td colspan="5" class="text-center">No orders found.</td>
                      </tr>
                    <% } %>
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
  <div class="pagination">
    
    <% if (currentPage > 1) { %>
      <a href="?page=<%= currentPage - 1 %>&search=<%= searchQuery %>">Prev</a>
    <% } else { %>
      <a class="disabled">Prev</a>
    <% } %>
    
    
    <div class="current-page"><%= currentPage %></div>
    
    
    <% if (currentPage < totalPages) { %>
      <a href="?page=<%= currentPage + 1 %>&search=<%= searchQuery %>">Next</a>
    <% } else { %>
      <a class="disabled">Next</a>
    <% } %>
  </div>
</main>

<%- include("../../views/partials/user/footer") %>


<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


<script>
   
function debounce(func, timeout = 300) {
  let timer;
  return (...args) => {
    clearTimeout(timer);
    timer = setTimeout(() => { func.apply(this, args); }, timeout);
  };
}


const performSearch = async (searchValue) => {
  try {
   
    const url = new URL(window.location);
    if (searchValue) {
      url.searchParams.set('search', searchValue);
    } else {
      url.searchParams.delete('search');
    }
    window.history.pushState({}, '', url);

    
    const response = await fetch(`/orders?search=${searchValue}&ajax=true`);
    
    
    if (!response.ok) {
      throw new Error(`HTTP error! status: ${response.status}`);
    }
    
    const data = await response.json();
    
    const tableBody = document.getElementById('orderTableBody');
    tableBody.innerHTML = ''; 

    if (data.orders && data.orders.length > 0) {
      data.orders.forEach(order => {
        
        const orderDate = order.createdOn ? new Date(order.createdOn).toLocaleDateString() : 'N/A';
        
        const row = `<tr class="order-item">
            <td data-label="Order ID">${order.orderid}</td>
            <td data-label="Date">${orderDate}</td>
            <td data-label="Total">₹${order.finalAmount.toFixed(2)}</td>
            <td data-label="Status">${order.status}</td>
            <td data-label="Actions">
                <a href="/orderDetails?id=${order._id}" class="btn btn-sm btn-primary">View</a>
            </td>
        </tr>`;
        tableBody.innerHTML += row;
      });
    } else {
      tableBody.innerHTML = `<tr><td colspan="5" class="text-center">No orders found.</td></tr>`;
    }

    
    if (data.totalPages > 0) {
      updatePagination(data.currentPage, data.totalPages, searchValue);
    }

    console.log("Search completed with results:", data.orders ? data.orders.length : 0);

  } catch (error) {
    console.error("Error fetching orders:", error);
    document.getElementById('orderTableBody').innerHTML = 
      `<tr><td colspan="5" class="text-center">Error loading orders. Please try again.</td></tr>`;
  }
};


function updatePagination(currentPage, totalPages, searchValue) {
  const paginationDiv = document.querySelector('.pagination');
  if (!paginationDiv) return;
  
  let paginationHTML = '';
  
  
  if (currentPage > 1) {
    paginationHTML += `<a href="?page=${currentPage - 1}&search=${searchValue}">&laquo; Prev</a>`;
  } else {
    paginationHTML += `<span class="disabled">&laquo; Prev</span>`;
  }
  
  
  paginationHTML += `<span>${currentPage}</span>`;
  
  
  if (currentPage < totalPages) {
    paginationHTML += `<a href="?page=${currentPage + 1}&search=${searchValue}">Next &raquo;</a>`;
  } else {
    paginationHTML += `<span class="disabled">Next &raquo;</span>`;
  }
  
  paginationDiv.innerHTML = paginationHTML;
}


const debouncedSearch = debounce(performSearch, 500);


document.addEventListener('DOMContentLoaded', function() {
  const searchInput = document.getElementById('orderSearch');
  
  if (searchInput) {
    console.log("Search input found, adding event listeners");
    
    
    searchInput.addEventListener('input', function() {
      const searchValue = this.value.trim();
      console.log("Search input changed to:", searchValue);
      debouncedSearch(searchValue);
    });
    
    
    searchInput.addEventListener('keydown', function(event) {
      if (event.key === 'Enter') {
        event.preventDefault();
        console.log("Enter key pressed, performing immediate search");
        performSearch(this.value.trim());
      }
    });
    
    
    if (searchInput.value.trim()) {
      console.log("Initial search value found:", searchInput.value.trim());
      performSearch(searchInput.value.trim());
    }
  } else {
    console.error("Search input element not found");
  }
});
</script>