<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Update Password</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        body {
            background-color: #f8f9fa;
        }
        .container {
            max-width: 500px;
        }
        .form-container {
            background: #fff;
            border-radius: 12px;
            padding: 30px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        }
        h3 {
            color: #046963;
            text-align: center;
            margin-bottom: 30px;
        }
        .form-control {
            border-radius: 8px;
            border: 2px solid #ced4da;
            transition: all 0.3s ease;
        }
        .form-control:focus {
            border-color: #046963;
            box-shadow: 0px 0px 6px rgba(4, 105, 99, 0.4);
        }
        .btn-primary {
            background: #046963;
            border: none;
            width: 100%;
            padding: 12px;
            font-size: 18px;
            border-radius: 8px;
            transition: all 0.3s ease;
        }
        .btn-primary:hover {
            background: #034f4a;
        }
        .error-message {
            color: #dc3545;
            font-size: 14px;
            margin-top: 5px;
            display: none;
        }
        .toggle-password {
            cursor: pointer;
            font-size: 14px;
            color: #046963;
            user-select: none;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <div class="form-container">
            <h3>Update Password</h3>
            <form id="updatePasswordForm" method="POST" action="/updatePassword">
                <div class="mb-3">
                    <label for="currentPassword" class="form-label">Current Password</label>
                    <input type="password" class="form-control" id="currentPassword" name="currentPassword">
                    <div class="error-message" id="currentPasswordError">This field cannot be empty.</div>
                </div>
                <div class="mb-3">
                    <label for="newPassword" class="form-label">New Password</label>
                    <input type="password" class="form-control" id="newPassword" name="newPassword">
                    <div class="error-message" id="newPasswordError">This field cannot be empty.</div>
                </div>
                <div class="mb-3">
                    <label for="confirmPassword" class="form-label">Confirm Password</label>
                    <input type="password" class="form-control" id="confirmPassword" name="confirmPassword">
                    <div class="error-message" id="confirmPasswordError">This field cannot be empty.</div>
                </div>

                <!-- Show Password Checkbox -->
                <div class="mb-3 form-check">
                    <input type="checkbox" class="form-check-input" id="showPassword">
                    <label class="form-check-label toggle-password" for="showPassword">Show Password</label>
                </div>
                

                <button type="submit" class="btn btn-primary">Submit</button>
            </form>
        </div>
    </div>

    <script>
      document.getElementById('updatePasswordForm').addEventListener('submit', async function(event) {
    event.preventDefault(); 

    const currentPassword = document.getElementById('currentPassword').value.trim();
    const newPassword = document.getElementById('newPassword').value.trim();
    const confirmPassword = document.getElementById('confirmPassword').value.trim();

    const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;

    let isValid = true;

    // Check if fields are empty
    if (currentPassword === "") {
        document.getElementById('currentPasswordError').style.display = 'block';
        isValid = false;
    } else {
        document.getElementById('currentPasswordError').style.display = 'none';
    }

    if (newPassword === "") {
        document.getElementById('newPasswordError').style.display = 'block';
        isValid = false;
    } else {
        document.getElementById('newPasswordError').style.display = 'none';
    }

    if (confirmPassword === "") {
        document.getElementById('confirmPasswordError').style.display = 'block';
        isValid = false;
    } else {
        document.getElementById('confirmPasswordError').style.display = 'none';
    }

    if (!isValid) {
        return;
    }

    if (currentPassword === newPassword) {
        Swal.fire('Error', `New password can't be the same as the current password`, 'error');
        return;
    }

    if (newPassword.length < 8) {
        Swal.fire('Error', 'New password must be at least 8 characters long.', 'error');
        return;
    }

    if (!passwordRegex.test(newPassword)) {
        Swal.fire('Error', 'New password must contain at least one uppercase letter, one lowercase letter, one number, and one special character.', 'error');
        return;
    }

    if (newPassword !== confirmPassword) {
        Swal.fire('Error', 'New password and confirm password do not match.', 'error');
        return;
    }

   
    try {
        const response = await fetch('/updatePassword', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ currentPassword, newPassword })
        });

        const data = await response.json();

        if (data.success) {
            Swal.fire({
                title: 'Success!',
                text: data.message,
                icon: 'success',
                confirmButtonText: 'OK'
            }).then(() => {
                window.location.href = "/userProfile"; 
            });
        } else {
            Swal.fire('Error', data.message, 'error');
        }
    } catch (error) {
        Swal.fire('Error', 'Something went wrong. Please try again.', 'error');
    }
});



document.getElementById('showPassword').addEventListener('change', function() {
    const passwordFields = ['currentPassword', 'newPassword', 'confirmPassword'];
    
    passwordFields.forEach(id => {
        const field = document.getElementById(id);
        field.type = this.checked ? 'text' : 'password';
    });
});


    </script>
</body>
</html>
