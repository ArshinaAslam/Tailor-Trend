<%- include("../../views/partials/admin/header") %>


<head>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</head>

<style>
    


:root {
  --primary-color: #4f46e5;
  --primary-hover: #4338ca;
  --success-color: #10b981;
  --success-hover: #059669;
  --danger-color: #ef4444;
  --danger-hover: #dc2626;
  --warning-color: #f59e0b;
  --text-primary: #111827;
  --text-secondary: #4b5563;
  --text-muted: #6b7280;
  --bg-body: #f9fafb;
  --bg-card: #ffffff;
  --border-color: #e5e7eb;
  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
  --shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px -1px rgba(0, 0, 0, 0.1);
  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -2px rgba(0, 0, 0, 0.1);
  --radius-sm: 0.375rem;
  --radius: 0.5rem;
  --radius-lg: 0.75rem;
  --transition: 200ms cubic-bezier(0.4, 0, 0.2, 1);
}


body {
  background-color: var(--bg-body);
  color: var(--text-primary);
  font-family: 'Inter', system-ui, -apple-system, BlinkMacSystemFont, sans-serif;
  margin: 0;
  padding: 0;
  line-height: 1.6;
}

.container {
  max-width: 1280px;
  margin: 2rem auto;
  padding: 0 1.5rem;
}


h1 {
  font-size: 1.875rem;
  font-weight: 700;
  color: var(--text-primary);
  margin-bottom: 2rem;
}

h2 {
  font-size: 1.25rem;
  font-weight: 600;
  color: var(--text-primary);
  margin-bottom: 1.25rem;
}

/* Layout */
.order-grid {
  display: grid;
  grid-template-columns: 3fr 2fr;
  gap: 1.5rem;
  margin-bottom: 2rem;
}

@media (max-width: 768px) {
  .order-grid {
    grid-template-columns: 1fr;
  }
}

/* Card styles */
.order-details,
.shipping-address,
.order-items {
  background-color: var(--bg-card);
  border-radius: var(--radius);
  box-shadow: var(--shadow);
  padding: 1.5rem;
  height: fit-content;
  border: 1px solid var(--border-color);
  transition: box-shadow var(--transition);
}

.order-details:hover,
.shipping-address:hover,
.order-items:hover {
  box-shadow: var(--shadow-md);
}


.order-meta {
  display: grid;
  gap: 1.25rem;
}

.meta-item {
  display: flex;
  flex-direction: column;
  gap: 0.375rem;
}

.label {
  color: var(--text-muted);
  font-size: 0.875rem;
  font-weight: 500;
}

.value {
  color: var(--text-primary);
  font-size: 1rem;
  font-weight: 600;
}

/* Shipping address styles */
.shipping-address p {
  margin: 0.75rem 0;
  color: var(--text-secondary);
  display: flex;
  align-items: baseline;
}

.shipping-address strong {
  color: var(--text-primary);
  font-weight: 600;
  min-width: 120px;
  display: inline-block;
}


.item-card {
  display: flex;
  flex-direction: column;
  padding: 1.25rem;
  background-color: var(--bg-body);
  border-radius: var(--radius-sm);
  margin-bottom: 1rem;
  transition: transform var(--transition), box-shadow var(--transition);
  border: 1px solid var(--border-color);
}

.item-card:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
}

.item-details {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.item-details h3 {
  margin: 0;
  font-size: 1rem;
  color: var(--text-primary);
  font-weight: 600;
}


select {
  width: 100%;
  padding: 0.625rem 0.75rem;
  background-color: var(--bg-card);
  color: var(--text-primary);
  border: 1px solid var(--border-color);
  border-radius: var(--radius-sm);
  font-size: 0.875rem;
  font-family: inherit;
  cursor: pointer;
  transition: border-color var(--transition), box-shadow var(--transition);
  appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 24 24' stroke='%236b7280'%3E%3Cpath stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M19 9l-7 7-7-7'%3E%3C/path%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 0.75rem center;
  background-size: 1rem;
  padding-right: 2.5rem;
}

select:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 2px rgba(79, 70, 229, 0.1);
}

select:disabled {
  opacity: 0.7;
  cursor: not-allowed;
}

button {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-weight: 500;
  font-size: 0.875rem;
  padding: 0.625rem 1.25rem;
  border-radius: var(--radius-sm);
  border: none;
  cursor: pointer;
  transition: background-color var(--transition), transform var(--transition);
}

button:hover {
  transform: translateY(-1px);
}

button:active {
  transform: translateY(1px);
}


.return-request-section {
  margin-top: 1.25rem;
  padding: 1.25rem;
  background-color: rgba(245, 158, 11, 0.1);
  border-radius: var(--radius-sm);
  border: 1px solid rgba(245, 158, 11, 0.2);
}

.return-request-section h4 {
  margin-top: 0;
  margin-bottom: 0.75rem;
  font-size: 1rem;
  color: var(--text-primary);
}

.return-actions {
  display: flex;
  gap: 0.75rem;
  margin-top: 1rem;
}

.approve-return-btn {
  background-color: var(--success-color);
  color: white;
}

.approve-return-btn:hover {
  background-color: var(--success-hover);
}

.reject-return-btn {
  background-color: var(--danger-color);
  color: white;
}

.reject-return-btn:hover {
  background-color: var(--danger-hover);
}

.status-badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 0.25rem 0.75rem;
  border-radius: 9999px;
  font-size: 0.75rem;
  font-weight: 500;
}

.status-badge.return-pending {
  background-color: var(--warning-color);
  color: white;
}


@media (max-width: 640px) {
  .container {
    padding: 1rem;
    margin-top: 1rem;
  }
  
  .return-actions {
    flex-direction: column;
    gap: 0.5rem;
  }
  
  button {
    width: 100%;
  }
}
</style>



<body>
    
        <div class="container">
            <h1>Order Details</h1>
            
            <div class="order-grid">
                <div class="order-details">
                    <div class="order-meta">
                        <div class="meta-item">
                            <span class="label">Order ID:</span>
                            <span class="value"><%= order.orderid %></span>
                        </div>
                        <div class="meta-item">
                            <span class="label">Total Amount:</span>
                            <span class="value">₹<%= order.finalAmount %></span>
                        </div>
                        <div class="meta-item">
                            <span class="label">Payment Method:</span>
                            <span class="value"><%= order.paymentMethod %></span>
                        </div>
                        <div class="meta-item">
                            <span class="label">Order Date:</span>
                            <span class="value"><%= new Date(order.createdOn).toLocaleDateString() %></span>
                        </div>
                        <div class="meta-item">
                            <span class="label">Status:</span>
                            <select id="status-<%= order._id %>" 
                                    onchange="updateStatus('<%= order._id %>')" 
                                     <%= order.status === 'Delivered' ? 'disabled' : '' %>>  
                                <option value="Pending" <%= order.status === 'Pending' ? 'selected' : '' %>>Pending</option>
                                <option value="Pending" <%= order.status === 'Return requested' ? 'selected' : '' %>>Return requested</option>
                                <option value="Processing" <%= order.status === 'Processing' ? 'selected' : '' %>>Processing</option>
                                <option value="Shipped" <%= order.status === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                                <option value="Delivered" <%= order.status === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                                <option value="Cancelled" <%= order.status === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                            </select>
                        </div>                                              
                    </div>
                </div>
                
                <div class="shipping-address">
                    <h2>Shipping Address</h2>
                    <% if (address) { %>
                        <p><strong>Name:</strong> <%= address.name %></p>
                        <p><strong>Type:</strong> <%= address.addressType %></p>
                        <p><strong>Landmark:</strong> <%= address.landMark %></p>
                        <p><strong>City:</strong> <%= address.city %>, <%= address.state %> - <%= address.pincode %></p>
                        <p><strong>Phone:</strong> <%= address.phone %></p>
                        <p><strong>Alternate Phone:</strong> <%= address.altPhone %></p>
                    <% } else { %>
                        <p style="color: red;">Address not available</p>
                    <% } %>
                </div>
            </div>


            <div class="order-items">
              <h2>Order Items</h2>
              <% order.orderitems.forEach(item => { %>
                <div class="item-card">
                  <div class="item-details">
                    <h3>Product ID: <%= item.productId.name %></h3>
                    <p class="label">Quantity: <%= item.quantity %></p>
                    <p class="label">Price per Unit: ₹<%= item.price %></p>
                  </div>
                </div>
              <% }) %>
            
              <% if (order.status === 'Return requested' && order.returnRequest.status === 'pending') { %>
                <div class="return-request-section">
                  <h4>Return Request Details</h4>
                  <p><strong>Return Reason:</strong> <%= order.returnRequest.reason %></p>
                  <p><strong>Request Date:</strong> <%= new Date(order.returnRequest.requestedAt).toLocaleDateString() %></p>
                  <div class="return-actions">
                    <button 
                      class="btn btn-success approve-return-btn"
                      onclick="handleReturn('<%= order._id %>', 'Approved')">
                      Approve Return
                    </button>
                    <button 
                      class="btn btn-danger reject-return-btn"
                      onclick="handleReturn('<%= order._id %>', 'Rejected')">
                      Reject Return
                    </button>
                  </div>
                </div>
              <% } %>
            </div>
            
                   
        </div>
    
</body>


<script>
    const finalAmount = '<%= order.finalAmount %>'

    async function handleReturn(orderId, status) {
  const finalAmount = '<%= order.finalAmount %>';

  const response = await fetch('/admin/handleReturn', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({ orderId, status, finalAmount })
  });

  const result = await response.json();

  if (result.success) {
    Swal.fire({
      icon: 'success',
      title: 'Success!',
      text: result.message,
      confirmButtonColor: '#28a745',
      timer: 3000,
      showConfirmButton: false,
      toast: true,
      position: 'top-end'
    }).then(() => {
      window.location.reload();
    });
  } else {
    Swal.fire({
      icon: 'error',
      title: 'Oops...',
      text: result.message || 'Error while processing the return!',
      confirmButtonColor: '#dc3545'
    });
  }
}



    async function updateStatus(orderId) {
  const newStatus = document.getElementById(`status-${orderId}`).value;
  console.log('newstatus is:',newStatus)

  console.log('order id: ', orderId);
  
  
  try {
    const response = await fetch(`/admin/update-status/${orderId}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ status: newStatus })
    });

    const result = await response.json();
    
    if (result.success) {
      Swal.fire({
        icon: 'success',
        title: 'Status Updated!',
        text: 'Order status has been updated successfully',
      });
      
      
    } else {
      Swal.fire({
        icon: 'error',
        title: 'Update Failed',
        text: result.message,
      });
    }
  } catch (error) {
    Swal.fire({
      icon: 'error',
      title: 'Error',
      text: 'Failed to update status',
    });
  }
}

</script>

<%- include("../../views/partials/admin/footer") %>
